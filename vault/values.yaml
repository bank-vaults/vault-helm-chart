# Default values for vault.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Specify if the chart is being deployed to OpenShift
  openshift: false

# -- Number of replicas
replicaCount: 1

strategy:
  # -- Update strategy to use for Vault StatefulSet
  type: RollingUpdate

image:
  # -- Container image repo that contains HashiCorp Vault
  repository: hashicorp/vault
  # -- Container image tag
  tag: 1.14.1
  # -- Container image pull policy
  pullPolicy: IfNotPresent

service:
  # -- Vault service name
  name: vault
  # -- Vault service type
  type: ClusterIP
  # -- Vault service external port
  port: 8200
  # -- Force Vault load balancer IP
  loadBalancerIP: null
  # -- Vault service annotations.
  # For example, use `cloud.google.com/load-balancer-type: "Internal"` to specify GCP load balancer type.
  annotations: {}

headlessService:
  # -- Enable headless service for Vault
  enabled: false
  # -- Vault headless service name
  name: vault
  # -- Vault headless service external port
  port: 8200
  # -- Vault headless service annotations.
  # For example, use `external-dns.alpha.kubernetes.io/hostname: vault.mydomain.com` to create record-set.
  annotations: {}

ingress:
  # -- Enable Vault ingress
  enabled: false

  # -- Vault ingress class name.
  # For Kubernetes >= 1.18, you should specify the ingress-controller via this field.
  # Check: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  ingressClassName: ""

  # -- Vault ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Vault ingress accepted hostnames with path.
  # Used to create Ingress record and should be used with `service.type: ClusterIP`.
  hosts: []
    # - chart-example.local/vault

  # -- Vault ingress TLS configuration.
  # TLS secrets must be manually created in the namespace.
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

persistence:
  # -- Enable persistence using Persistent Volume Claims.
  # Check: http://kubernetes.io/docs/user-guide/persistent-volumes/
  enabled: false

  # -- Set Vault data Persistent Volume Storage Class.
  # If defined, sets the actual `storageClassName: <storageClass>`.
  # If set to "-", sets the actual `storageClassName: ""`, which disables dynamic provisioning.
  # If undefined (the default) or set to null, no `storageClassName` spec is
  # set, choosing the default provisioner.  (gp2 on AWS, standard on
  # GKE, AWS & OpenStack).
  storageClass: null

  # -- Used for hostPath persistence if PVC is disabled.
  # If both PVC and hostPath persistence are disabled, "emptyDir" will be used.
  # Check: https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
  hostPath: ""

  # -- Set default PVC size
  size: 10G

  # -- Set default PVC access mode.
  # Check: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessMode: ReadWriteOnce

# -- Containers to run before the Vault containers are started (init containers)
extraInitContainers: []
  # - name: waiter
  #   image: busybox
  #   args:
  #   - sleep
  #   - 10

# -- Containers to run alongside Vault containers (sidecar containers)
extraContainers: []
  # - name: consul-agent
  #   image: consul:1.10.4
  #   args:
  #   - -log-level=debug
  #   - -advertise="${POD_IP}"
  #   - -bind=0.0.0.0
  #   - -grpc-port=8502
  #   - -datacenter=dc1
  #   - -data-dir=/consul/data
  #   - -config-dir=/consul/config

# -- Extra volume definitions for sidecar and init containers
extraContainerVolumes: []
  # - name: volume-from-secret
  #   secret:
  #     secretName: secret-to-mount
  # - name: empty-dir-volume
  #   emptyDir: {}

tls:
  # -- Specify a secret which holds your custom TLS certificate.
  # If not specified, Helm will generate one for you.
  secretName: ""

  # -- Distribute the generated CA certificate Secret to other namespaces
  caNamespaces: []
    # - default

vault:
  # -- Custom secrets available to Vault.
  # Allows the mounting of various custom secrets to enable production Vault
  # configurations. The two fields required are `secretName` indicating the name
  # of the Kubernetes secret (created outside of this chart), and `mountPath`
  # at which it should be mounted in the Vault container.
  customSecrets: []
    # - secretName: vault-tls
    #   mountPath: /vault/tls

  # -- Custom secrets available to Vault as env vars.
  # Allows creating various custom environment variables from secrets to enable
  # production Vault configurations. The three fields required are `secretName` indicating
  # the name of the Kubernetes secret (created outside of this chart), `secretKey`
  # in this secret and `envName` which will be the name of the env var in the containers.
  envSecrets: []
    # - secretName: mysql
    #   secretKey: mysql-username
    #   envName: "MYSQL_USERNAME"

  # -- Custom env vars available to Vault.
  envs: []
    # - name: GOOGLE_APPLICATION_CREDENTIALS
    #   value: /etc/gcp/service-account.json

  # -- A YAML representation of the final Vault config file.
  # Check: https://developer.hashicorp.com/vault/docs/configuration
  config:
    # @ignored
    listener:
      tcp:
        address: "[::]:8200"

        # tls_disable: true

        ## If certManager.certificate is enabled use these parameters instead
        # tls_client_ca_file: /vault/tls/ca.crt
        # tls_cert_file: /vault/tls/tls.crt
        # tls_key_file: /vault/tls/tls.key

        ## Otherwise, use
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key

    # @ignored
    telemetry:
      statsd_address: localhost:9125

    # @ignored
    ui: true

    # @ignored
    disable_mlock: false

    # Check https://www.vaultproject.io/docs/configuration/storage/ for supported storage backends.
    # @ignored
    storage: {}
      # file:
      #   path: "/vault/file"
      #
      # consul:
      #   address: ""
      #   path: ""
      #
      # etcd:
      #   address: ""
      #   path: "vault/"
      #
      # s3:
      #   bucket: ""
      #   region: ""
      #   access_key: ""
      #   secret_key: ""
      #   endpoint: "" # When not using AWS S3
      #
      # gcs:
      #   bucket: ""
      #   credentials_file: ""
      #   ha_enabled: "true"
      #

    ## @ignored
    # api_addr: http://localhost:8200

  # -- A YAML representation of dynamic config data used by Bank-Vaults.
  # Bank-Vaults will use this data to continuously configure Vault.
  # Check: https://bank-vaults.dev/docs/external-configuration/
  externalConfig:
    # Allows creating policies in Vault which can be used later on in roles
    # for the Kubernetes based authentication.
    # See https://www.vaultproject.io/docs/concepts/policies.html for more information.
    # @ignored
    policies:
      - name: allow_secrets
        rules: |
          path "secret/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }

    # @ignored
    auth:
      - type: kubernetes
        # Allows creating roles in Vault which can be used later on for the Kubernetes based
        # authentication.
        # See https://www.vaultproject.io/docs/auth/kubernetes.html#creating-a-role.
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: default
            bound_service_account_namespaces: default
            policies: allow_secrets
            ttl: 1h

    # @ignored
    secrets:
      - path: secret
        type: kv
        description: General secrets.
        options:
          version: 2

  # Until this issue is fixed: https://github.com/kubernetes/helm/issues/3117
  # we have to workaround the default storage problem.
  # @ignored
  defaultStorage:
    storage:
      file:
        path: "/vault/file"

  # @ignored
  logLevel: info

unsealer:
  image:
    # -- Container image repo that contains Bank-Vaults
    repository: ghcr.io/bank-vaults/bank-vaults
    # -- Container image tag
    tag: "1.20.4"
    # -- Container image pull policy
    pullPolicy: IfNotPresent

  # @ignored
  args:
    [
      "--mode",
      "k8s",
      "--k8s-secret-namespace",
      "default",
      "--k8s-secret-name",
      "bank-vaults",
    ]

  # @ignored
  metrics:
    enabled: true
    debug: true
    name: metrics
    type: ClusterIP
    port: 9091
    serviceMonitor:
      enabled: false
      additionalLabels: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/metrics"
      prometheus.io/port: "9091"

statsd:
  image:
    # -- Container image repo that contains StatsD Prometheus exporter
    repository: prom/statsd-exporter
    # -- Container image tag
    tag: latest
    # -- Container image pull policy
    pullPolicy: IfNotPresent

  # @ignored
  config:
    mappings:
      - match: vault.route.*.*
        name: "vault_route"
        labels:
          method: "$1"
          path: "$2"

  # @ignored
  metrics:
    enabled: true
    port: 9102
    serviceMonitor:
      enabled: false
      additionalLabels: {}

rbac:
  psp:
    # -- Use pod security policy
    enabled: false

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use.
  # If not set and `create` is true, a name is generated using the fullname template.
  name: ""
  # -- Annotations to add to the service account.
  # For example, use `iam.gke.io/gcp-service-account: gsa@project.iam.gserviceaccount.com` to enable GKE workload identity.
  annotations: {}
  # -- Bind `system:auth-delegator` ClusterRoleBinding to this service account
  createClusterRoleBinding: true

# @ignored
vaultConfig:
  resources: {}

# @ignored
vaultUnsealer:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi

# @ignored
vaultConfigurer:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi

# @ignored
prometheusStatsdExporter:
  resources:
    requests:
      cpu: 50m
      memory: 128Mi

# -- Configure CertManager issuer and certificate.
# If enabled, please see necessary changes to `vault.config.listener.tcp` above.
# Either `issuerRef` must be set to your Issuer or issuer must be enabled to generate a SelfSigned one.
certManager:
  # @ignored
  issuer:
    enabled: false

  # @ignored
  certificate:
    enabled: false
    # issuerRef:
    # additionalDomains:
    #   - vault.mydomain.com

podDisruptionBudget:
  # -- Enables PodDisruptionBudget
  enabled: true
  # -- Represents the number of Pods that must be available (integer or percentage)
  # minAvailable: 1
  # -- Represents the number of Pods that can be unavailable (integer or percentage)
  maxUnavailable: 1

# -- Extra annotations to add to pod metadata
podAnnotations:
  # @ignored
  prometheus.io/scrape: "true"
  # @ignored
  prometheus.io/path: "/metrics"
  # @ignored
  prometheus.io/port: "9102"

# -- Additional labels to be applied to the Vault StatefulSet and Pods
labels: {}
  # team: banzai

# -- Resources to request for Vault
resources:
  # @ignored
  requests:
    cpu: 100m
    memory: 512Mi

  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube.
  ## If you do want to specify resources, uncomment the following
  ## lines and adjust them as necessary.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node labels for pod assignment.
# Check: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# -- List of node tolerations for the pods.
# Check: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []
  # - effect: NoSchedule
  #   key: "key"
  #   operator: Equal
  #   value: "value"

# Node affinity settings for the pods.
# If not set, it defaults `podAntiAffinity` to `preferredDuringSchedulingIgnoredDuringExecution`
# Check: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
affinity: {}

# -- Assign a PriorityClassName to pods if set.
# Check: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
priorityClassName: ""

# -- Override cluster version
kubeVersion: ""
